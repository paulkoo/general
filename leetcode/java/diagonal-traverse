class Solution {
    public int[] findDiagonalOrder(int[][] matrix) {
        
        int length = matrix.length;
        try {
            length *= matrix[0].length; //array length
        } catch (Exception e) {
            System.out.println("Error");
        }
        int len = length;
        int[] ans = new int[len]; //final array
        int r = 0, c = 0, rInc = -1, cInc = 1; //defining values
        
        
        
        
        
        
        while (len-1 >= 0) {            
            System.out.println("r: " + r + " c: " + c + " num: " + matrix[r][c]);
            ans[length-len] = matrix[r][c];
               
            
            if ((rInc == -1 && cInc == 1) && ((c+ cInc) > matrix[0].length-1)) { 
                // if up right and no right
                r++;
                rInc = 1;
                cInc = -1;
            } else if ((rInc == -1 && cInc == 1) && ((r + rInc) < 0)) { //if up right and no up
                c++;
                rInc = 1;
                cInc = -1;
            } else if ((rInc == 1 && cInc == -1) && ((r + rInc) > matrix.length-1)) { //if down left and no down
                c++;
                rInc = -1;
                cInc = 1;
            } else if ((rInc == 1 && cInc == -1) && ((c + cInc) < 0)) { //if down left and no left
                r++;
                rInc = -1;
                cInc = 1;
            } else {  
                r += rInc;
                c += cInc;
            }
            
            len--;
        }
        
        return ans;
    }
}
